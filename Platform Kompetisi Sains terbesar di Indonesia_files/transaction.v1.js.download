let transData = [];
function dispTransaction(){
    let key = base64_encode('trans');
    if(getStorage(key) != null && getJarakWaktu(gettoday(), JSON.parse(repair(getStorage(key), key)).date, "Detik") > 0){
        transData = JSON.parse(repair(getStorage(key), key));
        showload();
        setTimeout(() => {
          renderTransaction();
          hideload();
        }, 600);
    }
    else{
      showload();
      getData(
        "transact",
        {
          token: getCookie("token"),
          order: "disptransaction",
          tdy: gettoday()
        },
        (resp) => {
          if (resp.response == "success") {
            transData = {
              date: resp.date,
              data: resp.data
            };
            setStorage(key, shake(JSON.stringify(transData), key));
            renderTransaction();
          }
          hideload();
        }
      );
       
    }
}

function renderTransaction(){
    SFR(".stage1, .stage2, .stage3").hide();
    dispStage1();
}

function dispStage1(){
    if (transData.data.length > 0) {
        let disp = '';
        transData.data.forEach(element => {
            let target = (24-element.expired);
            let progress = Math.floor(target * 100/24);
            let status = element.status.toLowerCase();
            let valid = element.amount - element.amount_tf - element.kode_unik;
            let exped = element.exped;
            let ordData = element.data_order;
            let palangTrans = (exped == 'Indah Cargo' && ordData.shipper.ongkos == 0 ? false: true);
            

            if(status == 'succeed'){
                progress = 100;
                element.expired = 0;
            }
            if(element.resi != '' && getStorage(element.resi) != null){
                let datapindai = JSON.parse(getStorage(element.resi));
                if(datapindai.date != gettoday().split(' ')[0]){
                    removeStorage(element.resi);
                }
            }
            disp+=`<tr>
            <td>
                <div class="d-flex align-items-center">
                    ${(element.bukti_tf==""?`<svg width="32" viewBox="0 0 24 24" fill="none" xmlns="http://www.w3.org/2000/svg">
                    <path opacity="0.4" d="M16.191 2H7.81C4.77 2 3 3.78 3 6.83V17.16C3 20.26 4.77 22 7.81 22H16.191C19.28 22 21 20.26 21 17.16V6.83C21 3.78 19.28 2 16.191 2Z" fill="currentColor"></path>
                    <path fill-rule="evenodd" clip-rule="evenodd" d="M8.07996 6.6499V6.6599C7.64896 6.6599 7.29996 7.0099 7.29996 7.4399C7.29996 7.8699 7.64896 8.2199 8.07996 8.2199H11.069C11.5 8.2199 11.85 7.8699 11.85 7.4289C11.85 6.9999 11.5 6.6499 11.069 6.6499H8.07996ZM15.92 12.7399H8.07996C7.64896 12.7399 7.29996 12.3899 7.29996 11.9599C7.29996 11.5299 7.64896 11.1789 8.07996 11.1789H15.92C16.35 11.1789 16.7 11.5299 16.7 11.9599C16.7 12.3899 16.35 12.7399 15.92 12.7399ZM15.92 17.3099H8.07996C7.77996 17.3499 7.48996 17.1999 7.32996 16.9499C7.16996 16.6899 7.16996 16.3599 7.32996 16.1099C7.48996 15.8499 7.77996 15.7099 8.07996 15.7399H15.92C16.319 15.7799 16.62 16.1199 16.62 16.5299C16.62 16.9289 16.319 17.2699 15.92 17.3099Z" fill="currentColor"></path>
                  </svg>`:` <img class="rounded bg-soft-primary img-fluid avatar-40 me-3 bukti z-depth-9" src="${element.bukti_tf+'?a='+Math.random()}" alt="profile">`)}
                    <h6><button onclick="openInv('${element.no_transaksi}', ${palangTrans})" type="button" class="btn btn-soft-link">#${element.no_transaksi}</button></h6>
                </div>
            </td>
            <td>
                <div class="iq-media-group iq-media-group-1">
                     ${getProcess(element.status.toLowerCase(), element.resi)}
                </div>
            </td>
            <td>
                <div class="iq-media-group iq-media-group-1">
                    <button type="button" class="btn btn-outline-link mt-2 btnUplBukti" meta="${element.pos}qqssqq${element.no_transaksi}">
                        <svg style="margin-right:10px" fill="none" xmlns="http://www.w3.org/2000/svg" width="24" height="24" viewBox="0 0 24 24">
                            <path d="M7.38948 8.98403H6.45648C4.42148 8.98403 2.77148 10.634 2.77148 12.669V17.544C2.77148 19.578 4.42148 21.228 6.45648 21.228H17.5865C19.6215 21.228 21.2715 19.578 21.2715 17.544V12.659C21.2715 10.63 19.6265 8.98403 17.5975 8.98403L16.6545 8.98403" stroke="currentColor" stroke-width="1.5" stroke-linecap="round" stroke-linejoin="round"></path>
                            <path d="M12.0215 2.19044V14.2314" stroke="currentColor" stroke-width="1.5" stroke-linecap="round" stroke-linejoin="round"></path>
                            <path d="M9.10645 5.1189L12.0214 2.1909L14.9374 5.1189" stroke="currentColor" stroke-width="1.5" stroke-linecap="round" stroke-linejoin="round"></path>
                        </svg>Upload bukti</button>
                </div>
            </td>
            <td><span>${(palangTrans === false? 'menunggu tarif cargo':'Rp. '+formatMoney(element.amount))}<span></td>
            <td>
                <div class="mb-2 d-flex align-items-center">
                    <h6>${(status!='unpaid'?(valid<=0?'paid':'terkonfirmasi tapi kurang Rp. '+ formatMoney(valid)): (element.expired <=0? 'expired':beautyDate(element.tanggal_expired)))}</h6>
                </div>
                <div class="shadow-none progress bg-soft-primary w-100" style="height: 4px">
                   <div class="progress-bar bg-${((progress>50 && progress < 98)?'warning':(progress>98?(status!='unpaid'?'success':'danger'):'success'))}" data-toggle="progress-bar" role="progressbar" aria-valuenow="100" aria-valuemin="0" aria-valuemax="100" style="width: ${progress}%; transition: width 2s ease 0s;"></div>
                </div>
                <label>${(element.expired)>=0?(element.expired):'0'} jam lagi</label>
            </td>
        </tr>`;
        });


        SFR(".maindisp .stage1").show();
        SFR(".maindisp .stage1").html(`
        <div class="d-flex justify-content-between align-items-center flex-wrap mb-5 mt-100 gap-3">
                    <div class="d-flex flex-column">
                        <div class="flex justify-content-start">
                        <svg width="32" viewBox="0 0 24 24" fill="none" xmlns="http://www.w3.org/2000/svg">
                            <path opacity="0.4" d="M16.191 2H7.81C4.77 2 3 3.78 3 6.83V17.16C3 20.26 4.77 22 7.81 22H16.191C19.28 22 21 20.26 21 17.16V6.83C21 3.78 19.28 2 16.191 2Z" fill="currentColor"></path>
                            <path fill-rule="evenodd" clip-rule="evenodd" d="M8.07996 6.6499V6.6599C7.64896 6.6599 7.29996 7.0099 7.29996 7.4399C7.29996 7.8699 7.64896 8.2199 8.07996 8.2199H11.069C11.5 8.2199 11.85 7.8699 11.85 7.4289C11.85 6.9999 11.5 6.6499 11.069 6.6499H8.07996ZM15.92 12.7399H8.07996C7.64896 12.7399 7.29996 12.3899 7.29996 11.9599C7.29996 11.5299 7.64896 11.1789 8.07996 11.1789H15.92C16.35 11.1789 16.7 11.5299 16.7 11.9599C16.7 12.3899 16.35 12.7399 15.92 12.7399ZM15.92 17.3099H8.07996C7.77996 17.3499 7.48996 17.1999 7.32996 16.9499C7.16996 16.6899 7.16996 16.3599 7.32996 16.1099C7.48996 15.8499 7.77996 15.7099 8.07996 15.7399H15.92C16.319 15.7799 16.62 16.1199 16.62 16.5299C16.62 16.9289 16.319 17.2699 15.92 17.3099Z" fill="currentColor"></path>
                        </svg>
                        <span>Daftar Trasaksi</span>
                        </div>
                    </div>
                </div>
                <div class="row">
        
        <div class="col-lg-12">
        <div class="card card-block card-stretch card-height">
            <div class="flex-wrap card-header d-flex justify-content-between border-0">
                <div class="header-title">
                
                </div>
                <div class="dropdown">
                
                </div>
            </div>
            <div class="card-body pt-0">
                <div class=" table-responsive border rounded">
                    <table id="basic-table" class="table mb-0 table-striped" role="grid">
                    <thead>
                        <tr>
                            <th>No Transaksi</th>
                            <th>Proses Paket</th>
                            <th>Upload Bukti Transfer</th>
                            <th>Amount</th>
                            <th>Berlaku hingga</th>
                        </tr>
                    </thead>
                    <tbody>
                        ${disp}
                    </tbody>
                    </table>
                </div>
            </div>
        </div>
    </div>
        </div>`);
    }
    else{
        SFR(".maindisp .stage1").html(``);
        SFR(".maindisp .stage1").hide();
    }

    SFR('.btnUplBukti').on('click', function(){
        let meta = SFR(this).getAttr('meta').split('qqssqq');
        kiri = SFR(this).children()[0].offset().left;
        atas = SFR(this).children()[0].offset().top - window.pageYOffset;
        lebar = SFR(this).children()[0].width();
        tinggi = SFR(this).children()[0].height();
        SFR(".overlayForm")
        .css({
        display: "block",
        }).delay(10, dom=>{
            hideScrollBody();
            SFR(".mainform")
            .css({
                display: "block",
                width: getTypeDisplay() == "laptop" ? "500px" : "100%",
                height: getTypeDisplay() == "laptop" ? "600px" : "100%",
                left: getTypeDisplay() == "laptop" ? "50%" : "0",
                top: getTypeDisplay() == "laptop" ? "50%" : "0",
                "border-radius": "10px",
                "margin-left": getTypeDisplay() == "laptop" ? "-250px" : "0",
                "margin-top": getTypeDisplay() == "laptop" ? "-300px" : "0",
            }).delay(100, dom =>{
                dom.children().forEach((item, ind) => {
                    item.children()[1].html("");
                    if (ind > 0) {
                    item.css({
                        left: dom.width() + "px",
                    });
                    } else {
                        item.css({
                            left: "0px",
                            })
                            .children()[0]
                            .children()[1]
                            .children()[0]
                            .html('Upload Bukti Transfer')
                            .parent()
                            .children()[1]
                            .html('#'+meta[1])
                            .parent().parent().parent().children()[1].html('');

                        let bukti = new CreateUploader(SFR('.form1 .formbody'), 'Bukti transfer','');
                        bukti.append();

                        bukti.getInputer().on('change', function(e) {
                            preventWarningCode(e.target.files[0], (palang, data) => {
                                if (palang) {
                                    bukti.setImage(data);
                                } else {
                                    showToast('gambar terindikasi mengandung code mengancam, crop menggunakan ms paint', 'error');
                                    bukti.setImage('');
                                }
                            });
                        });

                        let btnUpload = new CreateButton(SFR('.form1 .formfooter'), 'Upload', 'btn-success');
                        btnUpload.append();
                        btnUpload.getButton().on('click', function(){
                             if(bukti.getFile() == ''){
                                showToast('Bukti transfer belum diimport', 'error');
                             }
                             else{
                                  resizeBase64Image(bukti.getFile(),500, resp=>{
                                    showload();
                                        getData('transact',{
                                            token : getCookie('token'),
                                            order : 'bukti',
                                            pos:meta[0],
                                            file: resp
                                        }, resp=>{
                                            if(resp.data.status == 'success'){
                                                SFR(".form1 .posback").click();
                                                showToast('Bukti Transfer berhasil diupload');

                                                transData.data.forEach((elem, index)=>{
                                                    if(elem.pos == meta[0]){
                                                        transData.data[index].bukti_tf = resp.data.message;
                                                    }
                                                });
                                                let key = base64_encode('trans');
                                                setStorage(key, shake(JSON.stringify(transData), key));
                                                dispTransaction();
                                            }
                                            else{
                                                showToast('Bukti Transfer gagal diupload', 'error');
                                            }
                                            hideload();
                                        }) 
                                  });
                             }
                        })
                    }
                });
            })
        });
    });

    SFR('.bukti').on('click', function(){
        getNormalizePreviewInv(this.src, resp =>{
            let mag = new Magnimage(SFR(this), this.src, resp)
            mag.showUp();
        })
    });
    clearLacakExp();
}

function clearLacakExp(){
    let keys = Object.keys(localStorage);
    keys.forEach(item=>{
        let detect = JSON.parse(getStorage(item));
        if(typeof detect.date != 'undefined' && JSON.parse(getStorage(item)).date != gettoday().split(' ')[0]){
            if(typeof detect.status == 'undefined'){ 
                removeStorage(item);
            }
        }
    })
}


function getProcess(status, resi){
    if(status == 'succeed'){
        if(resi != ''){
            return `<a  class="iq-media-1">
                        <div class="icon iq-icon-box-3 rounded-pill">WT</div>
                    </a>
                    <a  class="iq-media-1">
                        <div class="icon iq-icon-box-3 rounded-pill">CR</div>
                    </a>
                    <a  class="iq-media-1 resi${resi}" onclick="lacak('${resi}')">
                        <div class="icon iq-icon-box-3 rounded-pill">DV</div>
                    </a>
                    <a  class="iq-media-1">
                        <div class="icon iq-icon-box-3 rounded-pill">SC</div>
                    </a>`;
        }
        else{
            return `<a  class="iq-media-1">
                        <div class="icon iq-icon-box-3 rounded-pill">WT</div>
                    </a>
                    <a  class="iq-media-1">
                        <div class="icon iq-icon-box-3 rounded-pill">SC</div>
                    </a>`;
        }
    }
    else if(status == 'unpaid'){
            return `<a  class="iq-media-1">
                        <div class="icon iq-icon-box-3 rounded-pill">WT</div>
                    </a>`;
    }
    else if(status == 'creating'){
            return `<a  class="iq-media-1">
                        <div class="icon iq-icon-box-3 rounded-pill">WT</div>
                    </a>
                    <a  class="iq-media-1">
                        <div class="icon iq-icon-box-3 rounded-pill">CR</div>
                    </a>`;
    }
    else{
            if(resi !=''){
                return `<a  class="iq-media-1">
                            <div class="icon iq-icon-box-3 rounded-pill">WT</div>
                        </a>
                        <a  class="iq-media-1">
                            <div class="icon iq-icon-box-3 rounded-pill">CR</div>
                        </a>
                        <a  class="iq-media-1 resi${resi}" onclick="lacak('${resi}')">
                            <div class="icon iq-icon-box-3 rounded-pill">DV</div>
                        </a>`;
            }
            else{
                return `<a  class="iq-media-1">
                           <div class="icon iq-icon-box-3 rounded-pill">WT</div>
                        </a>
                        <a  class="iq-media-1">
                            <div class="icon iq-icon-box-3 rounded-pill">CR</div>
                        </a>`;
            }
    }
}

function lacak(resi){
    lacakPaket(resi, pindai=>{
        
        let datalacak = ``,
            border = ['warning', 'success', 'danger', 'info', 'dark'];
        pindai.history.forEach((item, id)=>{
            datalacak = `<div class="d-flex align-items-top">
                            <small class="mb-0 text-left">${item.date.split(' ')[0]}<br/>
                            ${item.date.split(' ')[1]}</small>
                            <div class="profile-media ms-3 d-flex">
                                <div class="profile-dots-pills border-${border[id%border.length]}"></div>
                                <div class="ms-3">
                                    <h6 class="mb-0">${item.location}</h6>
                                    <small>${item.desc}</small>
                                </div>
                            </div>
                        </div>`+datalacak;
        });

        kiri = SFR('.resi'+resi).offset().left;
        atas = SFR('.resi'+resi).offset().top - window.pageYOffset;
        lebar = SFR('.resi'+resi).width();
        tinggi = SFR('.resi'+resi).height();
        SFR(".overlayForm")
        .css({
        display: "block",
        }).delay(10, dom=>{
            hideScrollBody();
            SFR(".mainform")
            .css({
                display: "block",
                width: getTypeDisplay() == "laptop" ? "500px" : "100%",
                height: getTypeDisplay() == "laptop" ? "600px" : "100%",
                left: getTypeDisplay() == "laptop" ? "50%" : "0",
                top: getTypeDisplay() == "laptop" ? "50%" : "0",
                "border-radius": "10px",
                "margin-left": getTypeDisplay() == "laptop" ? "-250px" : "0",
                "margin-top": getTypeDisplay() == "laptop" ? "-300px" : "0",
            }).delay(100, dom =>{
                dom.children().forEach((item, ind) => {
                    item.children()[1].html("");
                    if (ind > 0) {
                        item.css({
                            left: dom.width() + "px",
                        });
                    } else {
                        SFR('.tema .namesrc').css({'display':'none'});
                        item.css({
                            left: "0px",
                            })
                            .children()[0]
                            .children()[1]
                            .children()[0]
                            .html('Lacak Paket')
                            .parent()
                            .children()[1]
                            .html(resi + ' - ' + pindai.header.kurir + ' - ' + pindai.header.status)
                            .parent().parent().parent().children()[1].html(datalacak)
                            .parent().children()[2].html(``);
                    }
                });
            })
        });
    });
}

function lacakPaket(resi, cb){

    if(getStorage(resi) == null){
        showload();
        getData('transact', {
            token : getCookie('token'),
            order :'lacak',
            resi:resi
        }, resp =>{
            if(resp.response == 'success'){
                let pindai = {
                    data : resp.data,
                    date : gettoday().split(' ')[0]
                }
                setStorage(resi, JSON.stringify(pindai));
                cb(pindai.data);
                hideload();
            }
        })
    }
    else{
        let pindai = JSON.parse(getStorage(resi));
        if(pindai.date == gettoday().split(' ')[0]){
            cb(pindai.data);
        }
        else{
            showload();
            getData('transact', {
                token : getCookie('token'),
                resi:resi,
                order :'lacak'
            }, resp =>{
                if(resp.response == 'success'){
                    let pindai = {
                        data : resp.data,
                        date : gettoday().split(' ')[0]
                    }
                    setStorage(resi, JSON.stringify(pindai));
                    cb(pindai.data);
                    hideload();
                }
            })
        }
    }
}

function openInv(no_transaksi, plg){
    if(plg === true){
         displayInv(no_transaksi);
    }
    else{
       showToast('Bagi yang menggunakan jasa pengiriman Cargo Invoice baru bisa diakses setelah tarif ongkir tersedia', 'warning');
    }
}